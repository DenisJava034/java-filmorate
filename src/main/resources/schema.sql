CREATE TABLE IF NOT EXISTS FILM_RATING (
	FILM_RATING_ID BIGINT NOT NULL AUTO_INCREMENT,
	NAME CHARACTER VARYING(50) NOT NULL,
	DESCRIPTION CHARACTER VARYING(255),
	CONSTRAINT FILM_RATING_PK PRIMARY KEY (FILM_RATING_ID)
);

CREATE TABLE IF NOT EXISTS LIKES (
	FILM_ID BIGINT NOT NULL,
	USER_ID BIGINT NOT NULL,
    CONSTRAINT LIKES_PK PRIMARY KEY (FILM_ID, USER_ID)
);


CREATE TABLE IF NOT EXISTS USERS (
	USER_ID BIGINT NOT NULL AUTO_INCREMENT,
	EMAIL CHARACTER VARYING(50) NOT NULL,
	LOGIN CHARACTER VARYING(50) NOT NULL,
	NAME CHARACTER VARYING(50),
	BIRTHDAY DATE NOT NULL,
	CONSTRAINT USERS_PK PRIMARY KEY (USER_ID)
);

CREATE TABLE IF NOT EXISTS FILMS (
	FILM_ID BIGINT NOT NULL AUTO_INCREMENT,
	NAME CHARACTER VARYING(50) NOT NULL,
	DESCRIPTION CHARACTER VARYING(255),
	RELEASE_DATE DATE NOT NULL,
	DURATION INTEGER NOT NULL,
	FILM_RATING BIGINT,
	CONSTRAINT FILMS_PK PRIMARY KEY (FILM_ID)
);

CREATE TABLE IF NOT EXISTS FRIENDS (
	USER_ID BIGINT NOT NULL,
	FRIEND_ID BIGINT NOT NULL,
	CONSTRAINT FRIENDS_PK PRIMARY KEY (USER_ID, FRIEND_ID)
);

CREATE TABLE IF NOT EXISTS GENRE_FILM (
	FILM_ID BIGINT NOT NULL,
	GENRE_ID BIGINT NOT NULL,
	CONSTRAINT GENRE_FILM_PK PRIMARY KEY (FILM_ID, GENRE_ID)
);

CREATE TABLE IF NOT EXISTS genres (
	GENRE_ID BIGINT NOT NULL AUTO_INCREMENT,
	NAME CHARACTER VARYING(50) NOT NULL,
	CONSTRAINT GENRE_PK PRIMARY KEY (GENRE_ID)
);

ALTER TABLE FILMS ADD CONSTRAINT IF NOT EXISTS FILMS_FILM_RATING_FK FOREIGN KEY (FILM_RATING) REFERENCES FILM_RATING(FILM_RATING_ID) ON DELETE CASCADE ON UPDATE CASCADE;
ALTER TABLE GENRE_FILM ADD CONSTRAINT IF NOT EXISTS GENRE_FILM_FILMS_FK FOREIGN KEY (FILM_ID) REFERENCES FILMS(FILM_ID) ON DELETE CASCADE ON UPDATE CASCADE;
ALTER TABLE GENRE_FILM ADD CONSTRAINT IF NOT EXISTS GENRE_FILM_GENRE_FK FOREIGN KEY (GENRE_ID) REFERENCES GENRES(GENRE_ID) ON DELETE CASCADE ON UPDATE CASCADE;
ALTER TABLE LIKES ADD CONSTRAINT IF NOT EXISTS LIKES_FILMS_FK FOREIGN KEY (FILM_ID) REFERENCES FILMS(FILM_ID) ON DELETE CASCADE ON UPDATE CASCADE;
ALTER TABLE LIKES ADD CONSTRAINT IF NOT EXISTS LIKES_USERS_FK FOREIGN KEY (USER_ID) REFERENCES USERS(USER_ID) ON DELETE CASCADE ON UPDATE CASCADE;
ALTER TABLE FRIENDS ADD CONSTRAINT IF NOT EXISTS FRIENDS_USERS_FK FOREIGN KEY (USER_ID) REFERENCES USERS(USER_ID);
ALTER TABLE FRIENDS ADD CONSTRAINT IF NOT EXISTS FRIENDS_USERS_FK_1 FOREIGN KEY (FRIEND_ID) REFERENCES USERS(USER_ID);